@mixin grid-bg-colors($bgcolor) {
    color: white;
    background-color: darken($bgcolor, 10%);
    border-color: darken($bgcolor, 50%);

    &:nth-child(2) {
        background-color: $bgcolor;
        border-left: none;
    }

    &:nth-child(3) {
        background-color: lighten($bgcolor, 10%);
        border-left: none;
    }
}

@mixin bold() {
    font-family: $font-sans-bold;
    font-weight: normal;
}

@mixin italic() {
    font-family: $font-sans-italic;
    font-style: normal;
}

@mixin bold-italic() {
    font-family: $font-sans-bold-italic;
    font-weight: normal;
    font-style: normal;
}

@mixin font-sans() {
    font-family: $font-sans;
    font-weight: normal !important;
    font-style: normal !important;
}

@mixin font-serif() {
    font-family: $font-serif;
    font-weight: normal !important;
    font-style: normal !important;
}

// Transitions
@mixin transition($transition...) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
        transition: $transition;
}

@mixin transition-delay($transition-delay) {
    -webkit-transition-delay: $transition-delay;
    -moz-transition-delay: $transition-delay;
            transition-delay: $transition-delay;
}

@mixin transition-duration($transition-duration) {
    -webkit-transition-duration: $transition-duration;
    -moz-transition-duration: $transition-duration;
        transition-duration: $transition-duration;
}

// Transformations
@mixin rotate($degrees) {
    -webkit-transform: rotate($degrees);
        -ms-transform: rotate($degrees);
            transform: rotate($degrees);
}

@mixin scale($ratio) {
    -webkit-transform: scale($ratio);
        -ms-transform: scale($ratio);
            transform: scale($ratio);
}

@mixin translate($x, $y) {
    -webkit-transform: translate($x, $y);
        -ms-transform: translate($x, $y);
            transform: translate($x, $y);
}

@mixin translateY($y) {
    -webkit-transform: translateY($y);
        -ms-transform: translateY($y);
            transform: translateY($y);
}

@mixin skew($x, $y) {
    -webkit-transform: skew($x, $y);
        -ms-transform: skewX($x) skewY($y); // See https://github.com/twitter/bootstrap/issues/4885
            transform: skew($x, $y);
    -webkit-backface-visibility: hidden; // See https://github.com/twitter/bootstrap/issues/5319
}

@mixin translate3d($x, $y, $z) {
    -webkit-transform: translate3d($x, $y, $z);
    -moz-transform: translate3d($x, $y, $z);
    -ms-transform: translate3d($x, $y, $z);
    -o-transform: translate3d($x, $y, $z);
        transform: translate3d($x, $y, $z);
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
@mixin backface-visibility($visibility) {
    -webkit-backface-visibility: $visibility;
       -moz-backface-visibility: $visibility;
            backface-visibility: $visibility;
}

// Box sizing
@mixin box-sizing($boxmodel) {
    -moz-box-sizing: $boxmodel;
         box-sizing: $boxmodel;
}

// User select
// For selecting text on the page
@mixin user-select($select) {
    -webkit-touch-callout: $select;
    -webkit-user-select: $select;
       -moz-user-select: $select;
        -ms-user-select: $select;
            user-select: $select;
}

@mixin border-radius($val) {
    border-radius: $val;
    background-clip: padding-box;
}

// Resize anything
@mixin resizable($direction) {
    resize: $direction; // Options: horizontal, vertical, both
    overflow: auto; // Safari fix
}

// Optional hyphenation
@mixin hyphens($mode: auto) {
    word-wrap: break-word;
    -webkit-hyphens: $mode;
       -moz-hyphens: $mode;
        -ms-hyphens: $mode;
         -o-hyphens: $mode;
            hyphens: $mode;
}

// BACKGROUNDS
// --------------------------------------------------

// Add an alphatransparency value to any background or border color (via Elyse Holladay)
@mixin translucent-background($color: $white, $alpha: 1) {
    background-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
}

@mixin translucent-border($color: $white, $alpha: 1) {
    border-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
    background-clip: padding-box;
}

// GRADIENTS
// --------------------------------------------------

@mixin gradient-vertical($startColor: #555, $endColor: #333) {
    background-color: mix($startColor, $endColor, 60%);
    background-image: -webkit-linear-gradient(top, $startColor, $endColor); // Safari 5.1+, Chrome 10+
    background-image: linear-gradient(to bottom, $startColor, $endColor);
    background-repeat: repeat-x;
}

@mixin gradient-horizontal($startColor: #555, $endColor: #333) {
    background-color: mix($startColor, $endColor, 60%);
    background-image: -webkit-linear-gradient(left, $startColor, $endColor); // Safari 5.1+, Chrome 10+
    background-image: linear-gradient(to right, $startColor, $endColor);
    background-repeat: repeat-x;
}

@mixin gradient-directional($startColor: #555, $endColor: #333, $deg: 45deg) {
    background-color: $endColor;
    background-image: -webkit-linear-gradient($deg, $startColor, $endColor); // Safari 5.1+, Chrome 10+
    background-image: linear-gradient($deg, $startColor, $endColor);
    background-repeat: repeat-x;
}

@mixin gradient-vertical-three-colors($startColor: #00b3ee, $midColor: #7a43b6, $colorStop: 50%, $endColor: #c3325f) {
    background-color: mix($midColor, $endColor, 80%);
    background-image: -webkit-linear-gradient($startColor, $midColor $colorStop, $endColor);
    background-image: linear-gradient($startColor, $midColor $colorStop, $endColor);
    background-repeat: no-repeat;
}

@mixin gradient-radial($innerColor: #555, $outerColor: #333)  {
    background-color: $outerColor;
    background-image: -webkit-radial-gradient(circle, $innerColor, $outerColor);
    background-image: radial-gradient(circle, $innerColor, $outerColor);
    background-repeat: no-repeat;
}

@mixin gradient-striped($color: #555, $angle: 45deg) {
    background-color: $color;
    background-image: -webkit-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
}

// Gradient Bar Colors for buttons and alerts
@mixin gradientBar($primaryColor, $secondaryColor, $textColor: #fff, $textShadow: 0 -1px 0 rgba(0,0,0,.25)) {
    color: $textColor;
    text-shadow: $textShadow;
    @include gradient-vertical($primaryColor, $secondaryColor);
    border-color: $secondaryColor $secondaryColor darken($secondaryColor, 15%);
    border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fade-in(rgba(0,0,0,.1), 0.15);
}

// FORMS
// ---------------------------------------------

// Mixin for form field states
@mixin formFieldState($textColor: #555, $borderColor: #ccc, $backgroundColor: #f5f5f5) {
    // Set the text color
    .control-label,
    .help-block,
    .help-inline {
        color: $textColor;
    }

    // Style inputs accordingly
    input,
    select,
    textarea {
        color: $textColor;
    }

    input,
    select,
    textarea {
        border-color: $borderColor;
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075);

        // Redeclare so transitions work
        &:focus {
            border-color: darken($borderColor, 10%);
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten($borderColor, 20%);
        }
    }

    // Give a small background color for input-prepend/-append
    .input-prepend .add-on,
    .input-append .add-on {
        color: $textColor;
        background-color: $backgroundColor;
        border-color: $textColor;
    }
}

// MISCELLANEOUS
// ---------------------------------------------

@mixin rgba-fallback($fallBackColor, $rgbaColor) {
    background-color: $fallBackColor;
    background-color: $rgbaColor;
}

// Text overflow
// Requires inline-block or block for proper styling
@mixin text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Webkit-style focus
@mixin tab-focus() {
  // Default
  outline: thin dotted #333;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// Table columns
@mixin tableColumns($columnSpan: 1) {
  float: none; // undo default grid column styles
  width: (($gridColumnWidth) * $columnSpan) + ($gridGutterWidth * ($columnSpan - 1)) - 16; // 16 is total padding on left and right of table cells
  margin-left: 0; // undo default grid column styles
}


// BUTTONS
// -----------------------------------------

// Apply button styles to any element
@mixin button() {
    display: inline-block;
    margin-bottom: 0; // For input.button
    padding: 6px 12px;
    font-size: $baseFontSize;
    line-height: $baseLineHeight;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    @include buttonBackground($buttonBackground, $buttonBackgroundHighlight, $grayDark, 0 1px 1px rgba(255,255,255,.75));
    border: 1px solid $buttonBorder;
    border-bottom-color: darken($buttonBorder, 10%);
    @include border-radius($baseBorderRadius);
    box-shadow: inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);

    // Hover/focus state
    &:hover,
    &:focus {
        color: $grayDark;
        text-decoration: none;
        background-position: 0 -15px;

        // transition is only when going to hover/focus, otherwise the background
        // behind the gradient (there for IE<=9 fallback) gets mismatched
        @include transition(background-position 0.1s linear);
    }

    // Focus state for keyboard and accessibility
    &:focus {
        @include tab-focus();
    }

    // Active state
    &.active,
    &:active {
        background-image: none;
        outline: 0;
        box-shadow: inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05);
    }

    // Disabled state
    &.disabled,
    &[disabled] {
        cursor: default;
        background-image: none;
        opacity: 0.65;
        box-shadow: none;
    }
}

@mixin buttonBackground($startColor, $endColor, $textColor: #fff, $textShadow: 0 -1px 0 rgba(0,0,0,.25)) {
  // gradientBar will set the background to a pleasing blend of these, to support IE<=9
  @include gradientBar($startColor, $endColor, $textColor, $textShadow);

  // in these cases the gradient won't cover the background, so we override
  &:hover, &:focus, &:active, &.active, &.disabled, &[disabled] {
    color: $textColor;
    background-color: $endColor;
  }

  // IE 7 + 8 can't handle box-shadow to show active, so we darken a bit ourselves
  &:active,
  &.active {
    background-color: darken($endColor, 10%) \9;
  }
}

